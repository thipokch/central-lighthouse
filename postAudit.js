'use strict';

const fs = require('fs');
const dotenv = require("dotenv");
const { GoogleSpreadsheet } = require('google-spreadsheet');

dotenv.config();


/*
 * Functions to process the report
 */

function processManifest() {
    console.log(`Reading manifest from environment variable...`);
    let manifests = JSON.parse(process.env.MANIFEST);

    manifests.forEach(manifest => {
        console.log(`Reading JSON file: ${manifest.jsonPath}`);
        let rawJson = fs.readFileSync( manifest.jsonPath );
        let lhJson = JSON.parse(rawJson);
        
        processReport(lhJson);
    })
}

function processReport(lhJson) {
    console.log(`Processing report for ${lhJson["requestedUrl"]} ...`);
    let audits = lhJson.audits;
    console.log(audits["service-worker"].title);

    // audits.forEach(site => {

    // });
    console.log('\n')
}

/*
 * Functions to upload to Google Sheets
 */

async function initGSheet() {
    console.log('Initializing Google Sheets...');
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEET_ID);

    console.log('Authenticating Google Sheets...');
    // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        private_key: process.env.GOOGLE_PRIVATE_KEY,
    });
    
    console.log('Loading Google Sheets...');
    await doc.loadInfo(); // loads document properties and worksheets

    console.log(`Loaded ${doc.title}`);
    return doc;
}

/*
 * Run
 */

const doc = await initGSheet();
const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
console.log(sheet.title);
console.log(sheet.rowCount);

